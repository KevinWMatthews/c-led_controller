How to run tests all at once? Hijack CMake's 'make test' target? Create a tew target?

Finish setting up cross-compilation:
    https://cmake.org/cmake/help/v3.3/manual/cmake-toolchains.7.html
    https://cmake.org/Wiki/CMake_Cross_Compiling
    https://github.com/danielotero/Generic-avr.cmake/blob/master/Generic-avr.cmake
    https://github.com/mkleemann/cmake-avr/blob/master/generic-gcc-avr.cmake
    http://nnarain.github.io/2016/03/29/AVR-CMake-Toolchain.html

CMake is configured to override anything that the user specifies for CMAKE_INSTALL_PREFIX.
Rewrite CMakeLists to provide a default but give user flexibility?

Cross-compile production code.

Cross-compile test code.
Run cross-compiled unit tests in QEMU (can we run them on the chip itself?).

Rethink how hw source code and mock source code is arranged. It's rather like it's own project, or at least I think it should be.

Does C throw an -fpermissive warning?

Test SetState() for all other ATtiny861 GPIOs.

Can't get autotools to compile CppUTest for the sitara; the libraries' .o files are still x86_64.
Cmake works.
